#Utility Function for counting cases
instances <- function(x,cases)
{
x <- c(x,cases)
return(table(x) - 1)
}
neutral=function(N,mu,warm=1000,ts=50)
{
variants = 1:N
tcounter = N
for (i in 1:warm)
{
variants = sample(variants,size=N,replace=TRUE)
index = which(runif(N)<=mu)
if (length(index)>0)
{
variants[index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
res = matrix(NA,nrow=ts,ncol=N)
res[1,]=variants
for (i in 2:ts)
{
res[i,] = sample(res[i-1,],size=N,replace=TRUE)
index = which(runif(N)<=mu)
if (length(index)>0)
{
res[i,index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
res=apply(res,1,instances,cases=unique(as.numeric(res)))
return(res)
}
a=neutral(N=1000,mu=0.05)
a
dim(a)
apply(a,2,function(x){sum(x>0)})
a=neutral(N=100,mu=0.0)
N=seq(1000,500,length.out=50)
N
N=round(seq(1000,500,length.out=50))
N
N0=N[1]
mu=0.01
variants = 1:N0
tcounter = N0
if (length(mu)==1){mu=rep(mu,ts)}
if (length(N)==1){N=rep(N,ts)}
mu
ts=50
variants = 1:N0
tcounter = N0
if (length(mu)==1){mu=rep(mu,ts)}
if (length(N)==1){N=rep(N,ts)}
length(mu)
length(N)
for (i in 1:warm)
{
variants = sample(variants,size=N0,replace=TRUE)
index = which(runif(N0)<=mu)
if (length(index)>0)
{
variants[index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
warm=1000
for (i in 1:warm)
{
variants = sample(variants,size=N0,replace=TRUE)
index = which(runif(N0)<=mu)
if (length(index)>0)
{
variants[index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
res = vector('list',length=ts)
res[[1]]=variants
for (i in 2:ts)
{
res[[i]] = sample(res[[i-1]],size=N[i],replace=TRUE)
index = which(runif(N[i])<=mu[i])
if (length(index)>0)
{
res[[i]][index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
res[[32]]
res=sapply(res,instances,cases=unique((unlist(res)))
return(res)
}
res=sapply(res,instances,cases=unique((unlist(res))
res=sapply(res,instances,cases=unique((unlist(res)))
return(res)
}
res=sapply(res,instances,cases=unique((unlist(res)))
return(res)
}
res=sapply(res,instances,cases=unique((unlist(res))))
dim(res)
res[1,]
res
neutral=function(N,N0=N[1],mu0=mu[1],mu,warm=1000,ts=50)
{
variants = 1:N0
tcounter = N0
if (length(mu)==1){mu=rep(mu,ts)}
if (length(N)==1){N=rep(N,ts)}
for (i in 1:warm)
{
variants = sample(variants,size=N0,replace=TRUE)
index = which(runif(N0)<=mu)
if (length(index)>0)
{
variants[index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
res = vector('list',length=ts)
res[[1]]=variants
for (i in 2:ts)
{
res[[i]] = sample(res[[i-1]],size=N[i],replace=TRUE)
index = which(runif(N[i])<=mu[i])
if (length(index)>0)
{
res[[i]][index]=(tcounter+1):c(tcounter+length(index))
tcounter = tcounter + length(index)
}
}
res=sapply(res,instances,cases=unique((unlist(res))))
return(res)
}
neutral(N=2300,mu=0.001,ts=100)
neutral(N=round(seq(20,100,length.out = 100)),mu=seq(0.01,0.001,length.out=100),ts=100)
